%this file corresponds to the moment equations needed to calculate mean and
%variance of YFP for a given set of model parameters
function [dM] = ODEFullMoments(t, M, model)

dM = M;
update=model.Update;
c1 = model.c(1);
c2 = model.c(2);
c3 = model.c(3);
c4 = model.c(4);
c5 = model.c(5);
c6 = model.c(6);
c7 = model.c(7);
c8 = model.c(8);
c9 = model.c(9);
X_1 = M(1);
X_2 = M(2);
X_3 = M(3);
X_4 = M(4);
X_5 = M(5);
X_6 = M(6);
X_11 = M(7);
X_12 = M(8);
X_13 = M(9);
X_14 = M(10);
X_15 = M(11);
X_16 = M(12);
X_22 = M(13);
X_23 = M(14);
X_24 = M(15);
X_25 = M(16);
X_26 = M(17);
X_33 = M(18);
X_34 = M(19);
X_35 = M(20);
X_36 = M(21);
X_44 = M(22);
X_45 = M(23);
X_46 = M(24);
X_55 = M(25);
X_56 = M(26);
X_66 = M(27);
X_146 = M(28);
X_246 = M(29);
X_346 = M(30);
X_446 = M(31);
X_456 = M(32);
X_466 = M(33);
X_4466 = M(34);
X_126 = M(35);
X_136 = M(36);
X_226 = M(37);
X_236 = M(38);
X_256 = M(39);
X_266 = M(40);
X_336 = M(41);
X_356 = M(42);
X_366 = M(43);
X_2466 = M(44);
X_3466 = M(45);
X_116 = M(46);
X_156 = M(47);
X_166 = M(48);
X_1466 = M(49);
X_2266 = M(50);
X_2366 = M(51);
X_3366 = M(52);
X_1266 = M(53);
X_1366 = M(54);
X_1166 = M(55);
u = GetPieceWiseConstantInput(t, model.InputParams);
if (update==0)
	dM(1) = X_2*c2 - X_1*c1*u;
	dM(2) = X_3*c4 - X_2*c3 - X_2*c2 + X_1*c1*u;
	dM(3) = X_2*c3 - X_3*c4;
	dM(4) = X_2*c5 + X_3*c6 - X_4*c7;
	dM(5) = X_46*c8 - X_5*c9;
	dM(6) = 0;
	dM(7) = X_2*c2 + 2*X_12*c2 + X_1*c1*u - 2*X_11*c1*u;
	dM(8) = X_13*c4 - X_12*c2 - X_12*c3 - X_2*c2 + X_22*c2 - X_1*c1*u + X_11*c1*u - X_12*c1*u;
	dM(9) = X_12*c3 - X_13*c4 + X_23*c2 - X_13*c1*u;
	dM(10) = X_12*c5 + X_13*c6 - X_14*c7 + X_24*c2 - X_14*c1*u;
	dM(11) = X_25*c2 - X_15*c9 + X_146*c8 - X_15*c1*u;
	dM(12) = X_26*c2 - X_16*c1*u;
	dM(13) = X_2*c2 + X_2*c3 + X_3*c4 - 2*X_22*c2 - 2*X_22*c3 + 2*X_23*c4 + X_1*c1*u + 2*X_12*c1*u;
	dM(14) = X_22*c3 - X_3*c4 - X_2*c3 - X_23*c2 - X_23*c3 - X_23*c4 + X_33*c4 + X_13*c1*u;
	dM(15) = X_22*c5 - X_24*c2 - X_24*c3 + X_23*c6 - X_24*c7 + X_34*c4 + X_14*c1*u;
	dM(16) = X_35*c4 - X_25*c3 - X_25*c9 - X_25*c2 + X_246*c8 + X_15*c1*u;
	dM(17) = X_36*c4 - X_26*c3 - X_26*c2 + X_16*c1*u;
	dM(18) = X_2*c3 + X_3*c4 + 2*X_23*c3 - 2*X_33*c4;
	dM(19) = X_24*c3 + X_23*c5 - X_34*c4 + X_33*c6 - X_34*c7;
	dM(20) = X_25*c3 - X_35*c4 - X_35*c9 + X_346*c8;
	dM(21) = X_26*c3 - X_36*c4;
	dM(22) = X_2*c5 + X_3*c6 + X_4*c7 + 2*X_24*c5 + 2*X_34*c6 - 2*X_44*c7;
	dM(23) = X_25*c5 + X_35*c6 - X_45*c7 - X_45*c9 + X_446*c8;
	dM(24) = X_26*c5 + X_36*c6 - X_46*c7;
	dM(25) = X_5*c9 + X_46*c8 - 2*X_55*c9 + 2*X_456*c8;
	dM(26) = X_466*c8 - X_56*c9;
	dM(27) = 0;
	dM(28) = X_126*c5 + X_136*c6 - X_146*c7 + X_246*c2 - X_146*c1*u;
	dM(29) = X_226*c5 + X_236*c6 - X_246*c2 - X_246*c3 - X_246*c7 + X_346*c4 + X_146*c1*u;
	dM(30) = X_236*c5 + X_246*c3 + X_336*c6 - X_346*c4 - X_346*c7;
	dM(31) = X_26*c5 + X_36*c6 + X_46*c7 + 2*X_246*c5 + 2*X_346*c6 - 2*X_446*c7;
	dM(32) = X_256*c5 + X_356*c6 - X_456*c7 - X_456*c9 + X_4466*c8;
	dM(33) = X_266*c5 + X_366*c6 - X_466*c7;
	dM(34) = X_266*c5 + X_366*c6 + X_466*c7 + 2*X_2466*c5 + 2*X_3466*c6 - 2*X_4466*c7;
	dM(35) = X_136*c4 - X_126*c2 - X_126*c3 - X_26*c2 + X_226*c2 - X_16*c1*u + X_116*c1*u - X_126*c1*u;
	dM(36) = X_126*c3 - X_136*c4 + X_236*c2 - X_136*c1*u;
	dM(37) = X_26*c2 + X_26*c3 + X_36*c4 - 2*X_226*c2 - 2*X_226*c3 + 2*X_236*c4 + X_16*c1*u + 2*X_126*c1*u;
	dM(38) = X_226*c3 - X_36*c4 - X_26*c3 - X_236*c2 - X_236*c3 - X_236*c4 + X_336*c4 + X_136*c1*u;
	dM(39) = X_356*c4 - X_256*c3 - X_256*c9 - X_256*c2 + X_2466*c8 + X_156*c1*u;
	dM(40) = X_366*c4 - X_266*c3 - X_266*c2 + X_166*c1*u;
	dM(41) = X_26*c3 + X_36*c4 + 2*X_236*c3 - 2*X_336*c4;
	dM(42) = X_256*c3 - X_356*c4 - X_356*c9 + X_3466*c8;
	dM(43) = X_266*c3 - X_366*c4;
	dM(44) = X_2266*c5 + X_2366*c6 - X_2466*c2 - X_2466*c3 - X_2466*c7 + X_3466*c4 + X_1466*c1*u;
	dM(45) = X_2366*c5 + X_2466*c3 + X_3366*c6 - X_3466*c4 - X_3466*c7;
	dM(46) = X_26*c2 + 2*X_126*c2 + X_16*c1*u - 2*X_116*c1*u;
	dM(47) = X_256*c2 - X_156*c9 + X_1466*c8 - X_156*c1*u;
	dM(48) = X_266*c2 - X_166*c1*u;
	dM(49) = X_1266*c5 + X_1366*c6 - X_1466*c7 + X_2466*c2 - X_1466*c1*u;
	dM(50) = X_266*c2 + X_266*c3 + X_366*c4 - 2*X_2266*c2 - 2*X_2266*c3 + 2*X_2366*c4 + X_166*c1*u + 2*X_1266*c1*u;
	dM(51) = X_2266*c3 - X_366*c4 - X_266*c3 - X_2366*c2 - X_2366*c3 - X_2366*c4 + X_3366*c4 + X_1366*c1*u;
	dM(52) = X_266*c3 + X_366*c4 + 2*X_2366*c3 - 2*X_3366*c4;
	dM(53) = X_1366*c4 - X_1266*c2 - X_1266*c3 - X_266*c2 + X_2266*c2 - X_166*c1*u + X_1166*c1*u - X_1266*c1*u;
	dM(54) = X_1266*c3 - X_1366*c4 + X_2366*c2 - X_1366*c1*u;
	dM(55) = X_266*c2 + 2*X_1266*c2 + X_166*c1*u - 2*X_1166*c1*u;
else
end
